#security.basic.enabled=false


# SPRING BATCH (BatchProperties)

# Create the required batch tables on startup if necessary. Enabled automatically if no custom table prefix is set or if a custom schema is configured.
#spring.batch.initializer.enabled=true \u5E94\u8BE5\u5DF2\u5E9F\u5F03
# \u8BA9spring batch\u5728\u6570\u636E\u5E93\u91CC\u9762\u521B\u5EFA\u9ED8\u8BA4\u7684\u6570\u636E\u8868
# mysql\u9700\u8981\u914D\u7F6E\u624D\u80FD\u81EA\u52A8\u521B\u5EFA\u8868\uFF0Chsqldb\u4E0D\u9700\u8981
#spring.batch.initialize-schema=ALWAYS

# Execute all Spring Batch jobs in the context on startup.
#spring.batch.job.enabled=true

# Comma-separated list of job names to execute on startup (For instance `job1,job2`). By default, all Jobs found in the context are executed.
#spring.batch.job.names=importUserJob

# Path to the SQL file to use to initialize the database schema.
#spring.batch.schema=classpath:org/springframework/batch/core/schema-@@platform@@.sql
# mysql\u4E2A\u6027\u5316sql\u914D\u7F6E
#spring.batch.schema=classpath:sample/schema-mysql-sample.sql
#spring.batch.schema=classpath:motor/schema-mysql.sql

# Table prefix for all the batch meta-data tables.
#spring.batch.table-prefix=motor_
